colnames(marks)
germline_genes_import %>%
pull(Probe) -> germline_genes
germline_genes_import
germline_genes
marks %>%
filter(bait_gene %in% germline_genes)
marks %>%
filter(bait_gene %in% germline_genes) %>%
select(interaction_ID, bait_gene, oe_gene, cluster_ID, contains("mC"), -contains("hmC"), -contains("TET"), -contains("oe")) -> methylation_germline_promoters
head(methylation_germline_promoters)
methylation_included_clusters %>%
ggplot(aes(stage, methylation, fill = stage)) +
geom_violin(draw_quantiles = 0.5, scale = "width") +
scale_fill_manual(values = c(ES_colour, Epi_colour)) +
ylab("% methylation") +
theme(legend.position = "none", axis.title.x = element_blank()) -> methylation_germline_promoters_violins
methylation_germline_promoters %>%
ggplot(aes(stage, methylation, fill = stage)) +
geom_violin(draw_quantiles = 0.5, scale = "width") +
scale_fill_manual(values = c(ES_colour, Epi_colour)) +
ylab("% methylation") +
theme(legend.position = "none", axis.title.x = element_blank()) -> methylation_germline_promoters_violins
methylation_germline_promoters_violins
marks %>%
filter(bait_gene %in% germline_genes) %>%
select(interaction_ID, bait_gene, oe_gene, cluster_ID, contains("mC"), -contains("hmC"), -contains("TET"), -contains("oe")) %>%
pivot_longer(4:5, names_to = "condition")
marks %>%
filter(bait_gene %in% germline_genes) %>%
select(interaction_ID, bait_gene, oe_gene, cluster_ID, contains("mC"), -contains("hmC"), -contains("TET"), -contains("oe")) %>%
pivot_longer(4:5, names_to = "condition") %>%
mutate(condition = gsub("bait_mC_DNMT_WT_", "", condition)) -> methylation_germline_promoters
head(methylation_germline_promoters)
methylation_germline_promoters %>%
ggplot(aes(condition, value, fill = condition)) +
geom_violin(draw_quantiles = 0.5, scale = "width") +
scale_fill_manual(values = c(ES_colour, Epi_colour)) +
ylab("% methylation") +
theme(legend.position = "none", axis.title.x = element_blank()) -> methylation_germline_promoters_violins
methylation_germline_promoters_violins
marks %>%
filter(bait_gene %in% germline_genes) %>%
select(interaction_ID, bait_gene, oe_gene, cluster_ID, contains("mC"), -contains("hmC"), -contains("TET"), -contains("oe")) %>%
pivot_longer(4:5, names_to = "condition") %>%
mutate(condition = gsub("bait_mC_DNMT_WT_", "", condition)) %>%
mutate(condition = factor(condition, levels = c("ES", "Epi"))) -> methylation_germline_promoters
head(methylation_germline_promoters)
methylation_germline_promoters %>%
ggplot(aes(condition, value, fill = condition)) +
geom_violin(draw_quantiles = 0.5, scale = "width") +
scale_fill_manual(values = c(ES_colour, Epi_colour)) +
ylab("% methylation") +
theme(legend.position = "none", axis.title.x = element_blank()) -> methylation_germline_promoters_violins
methylation_germline_promoters_violins
methylation_germline_promoters %>%
ggplot(aes(condition, value, fill = condition)) +
geom_violin(draw_quantiles = 0.5, scale = "width") +
scale_fill_manual(values = c(ES_colour, Epi_colour)) +
ylab("% methylation") +
theme(legend.position = "none", axis.title.x = element_blank()) -> methylation_germline_promoters_violins
methylation_germline_promoters_violins
ggsave("../output/plots/methylation_germline_genes_violins.png", methylation_germline_promoters_violins, width = 2, height = 3)
ggsave("../output/plots/methylation_germline_genes_violins.svg", methylation_germline_promoters_violins, width = 2, height = 3)
methylation_germline_promoters
marks %>%
filter(bait_gene %in% germline_genes) %>%
select(bait_ID, bait_gene, oe_gene, cluster_ID, contains("mC"), -contains("hmC"), -contains("TET"), -contains("oe")) %>%
pivot_longer(4:5, names_to = "condition") %>%
mutate(condition = gsub("bait_mC_DNMT_WT_", "", condition)) %>%
mutate(condition = factor(condition, levels = c("ES", "Epi"))) -> methylation_germline_promoters
head(methylation_germline_promoters)
marks %>%
filter(bait_gene %in% germline_genes) %>%
select(bait_ID, bait_gene, oe_gene, contains("mC"), -contains("hmC"), -contains("TET"), -contains("oe")) %>%
pivot_longer(4:5, names_to = "condition") %>%
mutate(condition = gsub("bait_mC_DNMT_WT_", "", condition)) %>%
mutate(condition = factor(condition, levels = c("ES", "Epi"))) -> methylation_germline_promoters
marks %>%
filter(bait_gene %in% germline_genes) %>%
select(bait_ID, bait_gene, oe_gene, cluster_ID, contains("mC"), -contains("hmC"), -contains("TET"), -contains("oe"))
marks %>%
filter(bait_gene %in% germline_genes) %>%
select(bait_ID, bait_gene, oe_gene,  contains("mC"), -contains("hmC"), -contains("TET"), -contains("oe")) %>%
pivot_longer(3:4, names_to = "condition") %>%
mutate(condition = gsub("bait_mC_DNMT_WT_", "", condition)) %>%
mutate(condition = factor(condition, levels = c("ES", "Epi"))) -> methylation_germline_promoters
head(methylation_germline_promoters)
marks %>%
filter(bait_gene %in% germline_genes) %>%
select(bait_ID, bait_gene, oe_gene,  contains("mC"), -contains("hmC"), -contains("TET"), -contains("oe")) %>%
pivot_longer(3:4, names_to = "condition") %>%
mutate(condition = gsub("bait_mC_DNMT_WT_", "", condition))
marks %>%
filter(bait_gene %in% germline_genes) %>%
select(bait_ID, bait_gene, oe_gene,  contains("mC"), -contains("hmC"), -contains("TET"), -contains("oe")) %>%
pivot_longer(3:4, names_to = "condition") %>%
mutate(condition = gsub("bait_mC_DNMT_WT_", "", condition)) %>%
distinct(bait_ID, condition,.keep_all = TRUE)
marks %>%
filter(bait_gene %in% germline_genes) %>%
select(bait_ID, bait_gene, oe_gene,  contains("mC"), -contains("hmC"), -contains("TET"), -contains("oe")) %>%
pivot_longer(3:4, names_to = "condition") %>%
mutate(condition = gsub("bait_mC_DNMT_WT_", "", condition)) %>%
distinct(bait_ID, condition,.keep_all = TRUE) %>%
mutate(condition = factor(condition, levels = c("ES", "Epi"))) -> methylation_germline_promoters
head(methylation_germline_promoters)
methylation_germline_promoters %>%
ggplot(aes(condition, value, fill = condition)) +
geom_violin(draw_quantiles = 0.5, scale = "width") +
scale_fill_manual(values = c(ES_colour, Epi_colour)) +
ylab("% methylation") +
theme(legend.position = "none", axis.title.x = element_blank()) -> methylation_germline_promoters_violins
methylation_germline_promoters_violins
ggsave("../output/plots/methylation_germline_genes_violins.png", methylation_germline_promoters_violins, width = 2, height = 3)
ggsave("../output/plots/methylation_germline_genes_violins.svg", methylation_germline_promoters_violins, width = 2, height = 3)
expression_import
expression_import %>%
filter(Probe %in% germline_genes)
expression_import %>%
filter(Probe %in% germline_genes) %>%
select(Probe, 13:last_col())
expression_import %>%
filter(Probe %in% germline_genes) %>%
select(Probe, 13:last_col()) %>%
pivot_longer(2:last_col(), names_to = "condition", values_to = "expression") %>%
separate(condition, into = c("line", "genotpye", "stage", "day")) %>%
filter(line == "DNMT") -> germline_gene_expression
head(germline_gene_expression)
expression_import %>%
filter(Probe %in% germline_genes) %>%
select(Probe, 13:last_col()) %>%
pivot_longer(2:last_col(), names_to = "condition", values_to = "expression") %>%
separate(condition, into = c("line", "genotpye", "stage", "day")) %>%
filter(line == "DNMT")  %>%
select(-line) -> germline_gene_expression
expression_import %>%
filter(Probe %in% germline_genes) %>%
select(Probe, 13:last_col()) %>%
pivot_longer(2:last_col(), names_to = "condition", values_to = "expression")
expression_import %>%
filter(Probe %in% germline_genes) %>%
select(Probe, 13:last_col()) %>%
pivot_longer(2:last_col(), names_to = "condition", values_to = "expression") %>%
mutate(condition = gsub("_ES", "_ES_0"))
expression_import %>%
filter(Probe %in% germline_genes) %>%
select(Probe, 13:last_col()) %>%
pivot_longer(2:last_col(), names_to = "condition", values_to = "expression") %>%
mutate(condition = gsub("_ES", "_ES_0", condition))
expression_import %>%
filter(Probe %in% germline_genes) %>%
select(Probe, 13:last_col()) %>%
pivot_longer(2:last_col(), names_to = "condition", values_to = "expression") %>%
mutate(condition = gsub("_ES", "_ES_0", condition)) %>%
separate(condition, into = c("line", "genotpye", "stage", "day")) %>%
filter(line == "DNMT")  %>%
select(-line) -> germline_gene_expression
head(germline_gene_expression)
expression_import %>%
filter(Probe %in% germline_genes) %>%
select(Probe, 13:last_col()) %>%
pivot_longer(2:last_col(), names_to = "condition", values_to = "expression") %>%
mutate(condition = gsub("_ES", "_ES_0", condition)) %>%
separate(condition, into = c("line", "genotpye", "stage"), extra = "merge")
expression_import %>%
filter(Probe %in% germline_genes) %>%
select(Probe, 13:last_col()) %>%
pivot_longer(2:last_col(), names_to = "condition", values_to = "expression") %>%
#mutate(condition = gsub("_ES", "_ES_0", condition)) %>%
separate(condition, into = c("line", "genotpye", "stage"), extra = "merge")
expression_import %>%
filter(Probe %in% germline_genes) %>%
select(Probe, 13:last_col()) %>%
pivot_longer(2:last_col(), names_to = "condition", values_to = "expression") %>%
#mutate(condition = gsub("_ES", "_ES_0", condition)) %>%
separate(condition, into = c("line", "genotpye", "stage"), extra = "merge") %>%
filter(line == "DNMT")  %>%
select(-line) -> germline_gene_expression
head(germline_gene_expression)
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5)
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5)
germline_gene_expression
expression_import %>%
filter(Probe %in% germline_genes) %>%
select(Probe, 13:last_col()) %>%
pivot_longer(2:last_col(), names_to = "condition", values_to = "expression") %>%
#mutate(condition = gsub("_ES", "_ES_0", condition)) %>%
separate(condition, into = c("line", "genotype", "stage"), extra = "merge") %>%
filter(line == "DNMT")  %>%
select(-line) -> germline_gene_expression
head(germline_gene_expression)
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5)
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5) +
facet_grid(colss = vars(genotype))
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5) +
facet_grid(cols = vars(genotype))
expression_import %>%
filter(Probe %in% germline_genes) %>%
select(Probe, 13:last_col()) %>%
pivot_longer(2:last_col(), names_to = "condition", values_to = "expression") %>%
#mutate(condition = gsub("_ES", "_ES_0", condition)) %>%
separate(condition, into = c("line", "genotype", "stage"), extra = "merge") %>%
filter(line == "DNMT")  %>%
mutate(stage = factor(stage, levels = c("ES", "Epi_1", "Epi_2", "EB_2", "EB_4", "EB_6", "EB_8"))) %>%
select(-line) -> germline_gene_expression
head(germline_gene_expression)
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5) +
facet_grid(cols = vars(genotype))
expression_import %>%
filter(Probe %in% germline_genes) %>%
select(Probe, 13:last_col()) %>%
pivot_longer(2:last_col(), names_to = "condition", values_to = "expression") %>%
#mutate(condition = gsub("_ES", "_ES_0", condition)) %>%
separate(condition, into = c("line", "genotype", "stage"), extra = "merge") %>%
filter(line == "DNMT")  %>%
mutate(stage = factor(stage, levels = c("ES", "Epi_1", "Epi_2", "EB_2", "EB_4", "EB_6", "EB_8"))) %>%
mutate(genotype = factor(genotype, levels = c("WT", "KO")))
select(-line) -> germline_gene_expression
expression_import %>%
filter(Probe %in% germline_genes) %>%
select(Probe, 13:last_col()) %>%
pivot_longer(2:last_col(), names_to = "condition", values_to = "expression") %>%
#mutate(condition = gsub("_ES", "_ES_0", condition)) %>%
separate(condition, into = c("line", "genotype", "stage"), extra = "merge") %>%
filter(line == "DNMT")  %>%
mutate(stage = factor(stage, levels = c("ES", "Epi_1", "Epi_2", "EB_2", "EB_4", "EB_6", "EB_8"))) %>%
mutate(genotype = factor(genotype, levels = c("WT", "KO"))) %>%
select(-line) -> germline_gene_expression
head(germline_gene_expression)
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5) +
scale_fill_manual(values = c(DNMT_Epi_WT_colour, DNMT_Epi_KO_colour))
facet_grid(cols = vars(genotype))
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5) +
scale_fill_manual(values = c(DNMT_Epi_WT_colour, DNMT_Epi_KO_colour)) +
facet_grid(cols = vars(genotype))
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5) +
scale_fill_manual(values = c(DNMT_Epi_WT_colour, DNMT_Epi_KO_colour)) +
facet_grid(cols = vars(genotype)) +
theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 90), legend.position = "none")
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5) +
scale_fill_manual(values = c(DNMT_Epi_WT_colour, DNMT_Epi_KO_colour)) +
facet_grid(cols = vars(genotype)) +
theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 90, hjust = 0.5), legend.position = "none")
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5) +
scale_fill_manual(values = c(DNMT_Epi_WT_colour, DNMT_Epi_KO_colour)) +
facet_grid(cols = vars(genotype)) +
theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5), legend.position = "none")
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5) +
scale_fill_manual(values = c(DNMT_Epi_WT_colour, DNMT_Epi_KO_colour)) +
facet_grid(cols = vars(genotype)) +
theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5), legend.position = "none")
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5) +
scale_fill_manual(values = c(DNMT_Epi_WT_colour, DNMT_Epi_KO_colour)) +
facet_grid(cols = vars(genotype)) +
theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5), legend.position = "none")
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5) +
scale_fill_manual(values = c(DNMT_Epi_WT_colour, DNMT_Epi_KO_colour)) +
facet_grid(cols = vars(genotype)) +
ylab("expression in log2 RPKM") +
theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5), legend.position = "none")
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5) +
scale_fill_manual(values = c(DNMT_Epi_WT_colour, DNMT_Epi_KO_colour)) +
facet_grid(cols = vars(genotype)) +
ylab("expression in log2 RPKM") +
theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5), legend.position = "none")
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5) +
scale_fill_manual(values = c(DNMT_Epi_WT_colour, DNMT_Epi_KO_colour)) +
facet_grid(cols = vars(genotype)) +
ylab("expression in log2 RPKM") +
theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5), legend.position = "none") -> expression_germline_violins
expression_germline_violins
ggsave("expression_germline_violins.png", expression_germline_violins, width = 5, height = 3.5)
ggsave("expression_germline_violins.svg", expression_germline_violins, width = 5, height = 3.5)
ggsave("../output/plots/expression_germline_violins.png", expression_germline_violins, width = 5, height = 3.5)
ggsave("../output/plots/expression_germline_violins.svg", expression_germline_violins, width = 5, height = 3.5)
#read_tsv("../data/clusters_20_capped_marks_220517.txt") -> clusters_capped_marks
read_tsv("../data/clusters_20_uncapped_marks_220517.txt") -> clusters_uncapped_marks
read_tsv("../data/pluripotency_exit_RNA_Epi_and_EB_log2RPKM.txt") -> expression_import
read_tsv("../data/Annotated Probe Report for germ cell development GO0007281.txt") -> germline_genes_import
clusters_uncapped_marks %>%
rename_with(~gsub("H3K27Ac", "H3K27ac",.)) -> marks
colnames(marks)
germline_genes_import %>%
pull(Probe) -> germline_genes
germline_genes
marks %>%
filter(bait_gene %in% germline_genes) %>%
select(bait_ID, bait_gene, oe_gene,  contains("mC"), -contains("hmC"), -contains("TET"), -contains("oe")) %>%
pivot_longer(3:4, names_to = "condition") %>%
mutate(condition = gsub("bait_mC_DNMT_WT_", "", condition)) %>%
distinct(bait_ID, condition,.keep_all = TRUE) %>%
mutate(condition = factor(condition, levels = c("ES", "Epi"))) -> methylation_germline_promoters
head(methylation_germline_promoters)
methylation_germline_promoters %>%
ggplot(aes(condition, value, fill = condition)) +
geom_violin(draw_quantiles = 0.5, scale = "width") +
scale_fill_manual(values = c(ES_colour, Epi_colour)) +
ylab("% methylation") +
theme(legend.position = "none", axis.title.x = element_blank()) -> methylation_germline_promoters_violins
source("cluster_analysis_functions.R")
options(scipen = 0)
methylation_germline_promoters %>%
ggplot(aes(condition, value, fill = condition)) +
geom_violin(draw_quantiles = 0.5, scale = "width") +
scale_fill_manual(values = c(ES_colour, Epi_colour)) +
ylab("% methylation") +
theme(legend.position = "none", axis.title.x = element_blank()) -> methylation_germline_promoters_violins
methylation_germline_promoters_violins
ggsave("../output/plots/methylation_germline_genes_violins_ontology_list.png", methylation_germline_promoters_violins, width = 2, height = 3)
ggsave("../output/plots/methylation_germline_genes_violins_ontology_list.svg", methylation_germline_promoters_violins, width = 2, height = 3)
expression_import %>%
filter(Probe %in% germline_genes) %>%
select(Probe, 13:last_col()) %>%
pivot_longer(2:last_col(), names_to = "condition", values_to = "expression") %>%
#mutate(condition = gsub("_ES", "_ES_0", condition)) %>%
separate(condition, into = c("line", "genotype", "stage"), extra = "merge") %>%
filter(line == "DNMT")  %>%
mutate(stage = factor(stage, levels = c("ES", "Epi_1", "Epi_2", "EB_2", "EB_4", "EB_6", "EB_8"))) %>%
mutate(genotype = factor(genotype, levels = c("WT", "KO"))) %>%
select(-line) -> germline_gene_expression
head(germline_gene_expression)
germline_gene_expression %>%
ggplot(aes(stage, expression, fill = genotype)) +
geom_violin(draw_quantiles = 0.5) +
scale_fill_manual(values = c(DNMT_Epi_WT_colour, DNMT_Epi_KO_colour)) +
facet_grid(cols = vars(genotype)) +
ylab("expression in log2 RPKM") +
theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5), legend.position = "none") -> expression_germline_violins
expression_germline_violins
read_tsv("../data/Annotated Probe Report for Germ Line Deborah.txt") -> germline_genes_import
source("cluster_analysis_functions.R")
options(scipen = 0)
#read_tsv("../data/clusters_20_capped_marks_220517.txt") -> clusters_capped_marks
read_tsv("../data/clusters_20_uncapped_marks_220517.txt") -> clusters_uncapped_marks
#read_tsv("../data/pluripotency_exit_RNA_Epi_and_EB_log2RPKM.txt") -> expression_import
read_tsv("../data/Annotated Probe Report for DE DNMT Epi WT vs KO no MTC.txt") -> DNMT_KO_Epi_upregulated_import
clusters_uncapped_marks %>%
rename_with(~gsub("H3K27Ac", "H3K27ac",.)) -> marks
colnames(marks)
DNMT_KO_Epi_upregulated_import %>%
pull(Probe) -> DNMT_KO_Epi_up_genes
marks %>%
filter(bait_gene %in% DNMT_KO_Epi_up_genes) %>%
select(interaction_ID, bait_gene, oe_gene, cluster_ID, contains("mC"), -contains("hmC"), -contains("TET")) -> methylation_up_genes
head(methylation_up_genes)
marks %>%
filter(bait_gene %in% DNMT_KO_Epi_up_genes) %>%
select(interaction_ID, bait_ID, oe_ID, bait_gene, oe_gene, cluster_ID, contains("mC"), -contains("hmC"), -contains("TET")) -> methylation_up_genes
head(methylation_up_genes)
included_clusters <- c("cluster2", "cluster12", "cluster16", "cluster17")
methylation_up_genes %>%
filter(cluster_ID %in% included_clusters) %>%
pivot_longer(7:last_col(), names_to = "condition", values_to = "methylation") %>%
separate(condition, into = c("fragment", "mC", "DNMT", "genotype", "stage")) %>%
select(-mC, -DNMT) %>%
mutate(stage = factor(stage, levels = c("ES", "Epi"))) %>%
mutate(fragment = gsub("bait", "P", fragment)) %>%
mutate(fragment = gsub("oe", "PIR", fragment)) -> methylation_included_clusters
head(methylation_included_clusters)
marks %>%
filter(bait_gene %in% DNMT_KO_Epi_up_genes) %>%
select(interaction_ID, bait_ID, oe_ID, bait_gene, contains("mC"), -contains("hmC"), -contains("TET")) -> methylation_up_genes
head(methylation_up_genes)
included_clusters <- c("cluster2", "cluster12", "cluster16", "cluster17")
methylation_up_genes %>%
filter(cluster_ID %in% included_clusters) %>%
pivot_longer(5:last_col(), names_to = "condition", values_to = "methylation") %>%
separate(condition, into = c("fragment", "mC", "DNMT", "genotype", "stage")) %>%
select(-mC, -DNMT) %>%
mutate(stage = factor(stage, levels = c("ES", "Epi"))) %>%
mutate(fragment = gsub("bait", "P", fragment)) %>%
mutate(fragment = gsub("oe", "PIR", fragment)) -> methylation_included_clusters
marks %>%
filter(bait_gene %in% DNMT_KO_Epi_up_genes) %>%
select(interaction_ID, bait_ID, oe_ID, bait_gene, cluster_ID, contains("mC"), -contains("hmC"), -contains("TET")) -> methylation_up_genes
head(methylation_up_genes)
included_clusters <- c("cluster2", "cluster12", "cluster16", "cluster17")
methylation_up_genes %>%
filter(cluster_ID %in% included_clusters) %>%
pivot_longer(6:last_col(), names_to = "condition", values_to = "methylation") %>%
separate(condition, into = c("fragment", "mC", "DNMT", "genotype", "stage")) %>%
select(-mC, -DNMT) %>%
mutate(stage = factor(stage, levels = c("ES", "Epi"))) %>%
mutate(fragment = gsub("bait", "P", fragment)) %>%
mutate(fragment = gsub("oe", "PIR", fragment)) -> methylation_included_clusters
head(methylation_included_clusters)
included_clusters <- c("cluster2", "cluster12", "cluster16", "cluster17")
methylation_up_genes %>%
filter(cluster_ID %in% included_clusters) %>%
select(-cluster_ID) %>%
pivot_longer(6:last_col(), names_to = "condition", values_to = "methylation") %>%
separate(condition, into = c("fragment", "mC", "DNMT", "genotype", "stage")) %>%
select(-mC, -DNMT) %>%
mutate(stage = factor(stage, levels = c("ES", "Epi"))) %>%
mutate(fragment = gsub("bait", "P", fragment)) %>%
mutate(fragment = gsub("oe", "PIR", fragment)) -> methylation_included_clusters
head(methylation_included_clusters)
methylation_included_clusters %>%
filter(fragment = P)
methylation_included_clusters %>%
filter(fragment = "P")
methylation_included_clusters %>%
filter(fragment == "P")
methylation_included_clusters %>%
filter(fragment == "P") %>%
distinct(bait_ID, .keep_all = TRUE)
methylation_included_clusters %>%
filter(fragment == "PIR")
methylation_included_clusters %>%
filter(fragment == "P")
methylation_included_clusters %>%
filter(fragment == "P")
methylation_included_clusters %>%
filter(fragment == "P") %>%
distinct(bait_ID, genotype, stage .keep_all = TRUE)
methylation_included_clusters %>%
filter(fragment == "P") %>%
distinct(bait_ID, genotype, stage, .keep_all = TRUE) -> deduplicated promoters
methylation_included_clusters %>%
filter(fragment == "P") %>%
distinct(bait_ID, genotype, stage, .keep_all = TRUE)
methylation_included_clusters %>%
filter(fragment == "PIR")
methylation_included_clusters %>%
filter(fragment == "P")
methylation_up_genes %>%
filter(cluster_ID %in% included_clusters) %>%
select(-cluster_ID)
included_clusters <- c("cluster2", "cluster12", "cluster16", "cluster17")
methylation_up_genes %>%
filter(cluster_ID %in% included_clusters) %>%
select(-cluster_ID) %>%
pivot_longer(5:last_col(), names_to = "condition", values_to = "methylation") %>%
separate(condition, into = c("fragment", "mC", "DNMT", "genotype", "stage")) %>%
select(-mC, -DNMT) %>%
mutate(stage = factor(stage, levels = c("ES", "Epi"))) %>%
mutate(fragment = gsub("bait", "P", fragment)) %>%
mutate(fragment = gsub("oe", "PIR", fragment)) -> methylation_included_clusters
head(methylation_included_clusters)
methylation_included_clusters %>%
filter(fragment == "P") %>%
distinct(bait_ID, genotype, stage, .keep_all = TRUE) -> deduplicated promoters
methylation_included_clusters %>%
filter(fragment == "P")
methylation_included_clusters %>%
filter(fragment == "P") %>%
distinct(bait_ID, genotype, stage, .keep_all = TRUE)
methylation_included_clusters %>%
filter(fragment == "P") %>%
distinct(bait_ID, genotype, stage, .keep_all = TRUE) -> deduplicated promoters
methylation_included_clusters %>%
filter(fragment == "P")
methylation_included_clusters %>%
filter(fragment == "PIR")
methylation_included_clusters %>%
filter(fragment == "PIR") %>%
distinct(oe_ID, genotype, stage, .keep_all = TRUE) -> deduplicated_PIRs
deduplicated_PIRs
methylation_included_clusters %>%
filter(fragment == "PIR")
methylation_included_clusters %>%
filter(fragment == "P") %>%
distinct(bait_ID, genotype, stage, .keep_all = TRUE) -> deduplicated_promoters
deduplicated_promoters %>%
bind_rows(deduplicated_PIRs) -> methylation_included_clusters_dedup
methylation_included_clusters_dedup %>%
ggplot(aes(stage, methylation, fill = stage)) +
geom_violin(draw_quantiles = 0.5, scale = "width") +
scale_fill_manual(values = c(ES_colour, Epi_colour)) +
facet_grid(cols = vars(fragment)) +
ylab("% methylation") +
theme(legend.position = "none", axis.title.x = element_blank()) -> methylation_upregulated_elements_violins
methylation_upregulated_elements_violins
ggsave("../output/plots/methylation_DNMT_KO_up_genes_violins.png", methylation_upregulated_elements_violins, width = 4, height = 3)
ggsave("../output/plots/methylation_DNMT_KO_up_genes_violins.svg", methylation_upregulated_elements_violins, width = 4, height = 3)
ggsave("../output/plots/methylation_DNMT_KO_up_genes_violins.png", methylation_upregulated_elements_violins, width = 4, height = 3)
ggsave("../output/plots/methylation_DNMT_KO_up_genes_violins.svg", methylation_upregulated_elements_violins, width = 4, height = 3)
ggsave("../output/plots/methylation_DNMT_KO_up_genes_violins.png", methylation_upregulated_elements_violins, width = 4, height = 3)
ggsave("../output/plots/methylation_DNMT_KO_up_genes_violins.svg", methylation_upregulated_elements_violins, width = 4, height = 3)
