magic_table_uncapped %>%
filter(EM_cluster_group == "active P - active E") %>%
select(interaction_ID, P_gene, RNA_TET_WT_EpiLC_D2, RNA_TET_KO_EpiLC_D2) %>%
mutate(group = case_when(P_gene %in% TET_KO_down_genes ~ "TET_KO_down",
P_gene %in% stable_genes_selected_EM ~ "stable")) %>%
filter(!is.na(group)) -> expression_data_EM
head(expression_data_EM)
expression_data_EM %>%
group_by(P_gene) %>%
add_count()
expression_data_EM %>%
group_by(P_gene) %>%
add_count() %>%
select(P_gene, group, n)
expression_data_EM %>%
group_by(P_gene) %>%
add_count() %>%
select(P_gene, group, n) %>%
distinct()
expression_data_EM %>%
group_by(P_gene) %>%
add_count() %>%
select(P_gene, group, n) %>%
distinct() -> enhancer_counts_EM
head(enhancer_counts_EM)
enhancer_counts_EM %>%
ggplot(aes(n, fill = group)) +
geom_histogram()
bin_number <- max(enhancer_counts_EM$n)
enhancer_counts_EM %>%
ggplot(aes(n, fill = group)) +
geom_histogram(bins = bin_number)
enhancer_counts_EM %>%
ggplot(aes(n, fill = group)) +
geom_histogram(bins = bin_number, position = "dodge")
bin_number_EM <- max(enhancer_counts_EM$n)
enhancer_counts_EM %>%
ggplot(aes(n, fill = group)) +
geom_histogram(bins = bin_number_EM, position = "dodge")
enhancer_counts_EM
enhancer_counts_EM %>%
group_by(group, n) %>%
count()
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line()
enhancer_counts_EM %>%
group_by(group, n) %>%
count() -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line()
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside")
enhancer_counts_EM %>%
group_by(group, n) %>%
count()
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "stable", "Downregulated")) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.title = element_blank())
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.title = element_blank())
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.title = element_blank())
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.title = element_blank(), axis.title = element_text(size = 12))
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position.inside = c(0.7, 0.7), legend.title = element_blank(), axis.title = element_text(size = 12))
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.position.inside = c(0.7, 0.7), legend.title = element_blank(), axis.title = element_text(size = 12))
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.position.inside = c(0.7, 0.9), legend.title = element_blank(), axis.title = element_text(size = 12))
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.position.inside = c(0.7, 0.8), legend.title = element_blank(), axis.title = element_text(size = 12))
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.title = element_blank(), axis.title = element_text(size = 12),
legend.justification.top = "left", legend.justification.left = "top")
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.title = element_blank(), axis.title = element_text(size = 12),
legend.justification.top = "left", legend.justification.left = "top")
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.position.inside = c(0.7, 0.85), legend.title = element_blank(), axis.title = element_text(size = 12))
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.position.inside = c(0.7, 0.85), legend.title = element_blank(), axis.title = element_text(size = 12),
legend.frame = element_rect(colour = "black"))
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.position.inside = c(0.7, 0.85), legend.title = element_blank(), axis.title = element_text(size = 12),
legend.background = element_rect(colour = "black"))
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.position.inside = c(0.7, 0.85), legend.title = element_blank(), axis.title = element_text(size = 12),
legend.background = element_rect(colour = "black", size = 1))
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.position.inside = c(0.7, 0.85), legend.title = element_blank(), axis.title = element_text(size = 12),
legend.background = element_rect(colour = "black", size = 0.5))
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.position.inside = c(0.7, 0.85), legend.title = element_blank(), axis.title = element_text(size = 12),
legend.background = element_rect(colour = "black", size = 0.4))
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.position.inside = c(0.7, 0.87), legend.title = element_blank(), axis.title = element_text(size = 12),
legend.background = element_rect(colour = "black", size = 0.4))
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
theme(legend.position = "inside", legend.position.inside = c(0.7, 0.86), legend.title = element_blank(), axis.title = element_text(size = 12),
legend.background = element_rect(colour = "black", size = 0.4))
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
scale_colour_manual(values = ("black", down_colour)) +
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
scale_colour_manual(values = c("black", down_colour)) +
theme(legend.position = "inside", legend.position.inside = c(0.7, 0.86), legend.title = element_blank(), axis.title = element_text(size = 12),
legend.background = element_rect(colour = "black", size = 0.4))
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
scale_colour_manual(values = c("#bababa", down_colour)) +
theme(legend.position = "inside", legend.position.inside = c(0.7, 0.86), legend.title = element_blank(), axis.title = element_text(size = 12),
legend.background = element_rect(colour = "black", size = 0.4))
enhancer_counts_EM %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_EM
enhancer_counts_sum_EM %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
scale_colour_manual(values = c("#bababa", down_colour)) +
theme(legend.position = "inside", legend.position.inside = c(0.7, 0.86), legend.title = element_blank(), axis.title = element_text(size = 12),
legend.background = element_rect(colour = "black", size = 0.4)) -> enhancer_count_line_plot_EM
enhancer_count_line_plot_EM
ggsave("../output/plots/Figure4h_number_enhancer_line_EM.png", enhancer_count_line_plot_EM, width = 4, height = 4, units = "in")
ggsave("../output/plots/Figure4h_number_enhancer_line_EM.svg", enhancer_count_line_plot_EM, width = 4, height = 4, units = "in")
magic_table_uncapped %>%
filter(Louvain_cluster_group == "active P - active E") %>%
select(interaction_ID, P_gene, RNA_TET_WT_EpiLC_D2, RNA_TET_KO_EpiLC_D2) %>%
drop_na() %>%
mutate(group = case_when(P_gene %in% TET_KO_down_genes ~ "TET_KO_down",
RNA_TET_WT_EpiLC_D2 - RNA_TET_KO_EpiLC_D2 > -0.25 & RNA_TET_WT_EpiLC_D2 - RNA_TET_KO_EpiLC_D2 < 0.25 ~ "stable_genes")) -> activeE_groups_Louvain
head(activeE_groups_Louvain)
activeE_groups_Louvain %>%
group_by(group) %>%
distinct(P_gene, .keep_all = TRUE) %>% # we need this here because we have several interactions per gene
count() -> groups_counted_Louvain
groups_counted_Louvain
groups_counted_Louvain %>%
filter(group == "TET_KO_down") %>%
pull(n) -> number_KO_genes
set.seed(6)
activeE_groups_Louvain %>%
filter(group == "stable_genes") %>%
distinct(P_gene) %>%
slice_sample(n = number_KO_genes) %>%
pull() -> stable_genes_selected_Louvain
magic_table_uncapped %>%
filter(Louvain_cluster_group == "active P - active E") %>%
select(interaction_ID, P_gene, RNA_TET_WT_EpiLC_D2, RNA_TET_KO_EpiLC_D2) %>%
mutate(group = case_when(P_gene %in% TET_KO_down_genes ~ "TET_KO_down",
P_gene %in% stable_genes_selected_Louvain ~ "stable")) %>%
filter(!is.na(group)) -> expression_data_Louvain
head(expression_data_Louvain)
enhancer_counts_Louvain %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_Louvain
expression_data_Louvain %>%
group_by(P_gene) %>%
add_count() %>%
select(P_gene, group, n) %>%
distinct() -> enhancer_counts_Louvain
head(enhancer_counts_Louvain)
enhancer_counts_Louvain %>%
group_by(group, n) %>%
count() %>%
mutate(group = if_else(group == "stable", "Stable", "Downregulated")) %>%
mutate(group = factor(group, levels = c("Stable", "Downregulated"))) -> enhancer_counts_sum_Louvain
enhancer_counts_sum_Louvain %>%
ggplot(aes(n, nn, colour = group)) +
geom_line(size = 1) +
ylab("count") +
xlab("number of enhancers per gene") +
scale_colour_manual(values = c("#bababa", down_colour)) +
theme(legend.position = "inside", legend.position.inside = c(0.7, 0.86), legend.title = element_blank(), axis.title = element_text(size = 12),
legend.background = element_rect(colour = "black", size = 0.4)) -> enhancer_count_line_plot_Louvain
enhancer_count_line_plot_Louvain
ggsave("../output/plots/Figure4h_number_enhancer_line_Louvain.png", enhancer_count_line_plot_Louvain, width = 4, height = 4, units = "in")
ggsave("../output/plots/Figure4h_number_enhancer_line_Louvain.svg", enhancer_count_line_plot_Louvain, width = 4, height = 4, units = "in")
read_tsv("../data/interaction_pairs_uncapped.txt") -> magic_table_uncapped
magic_table_uncapped
magic_table_uncapped n %>%
magic_table_uncapped %>%
select(-contains("cluster_ID"), -contains("UMAP"), -P_ID, -PIR_ID, -PIR_gene, -contains("_ES_"))
magic_table_uncapped %>%
select(-contains("cluster_ID"), -contains("UMAP"), -P_ID, -PIR_ID, -PIR_gene, -contains("_ES_"), - contains("_hmC_"), -contains("mC"))
magic_table_uncapped %>%
select(-contains("cluster_ID"), -contains("UMAP"), -P_ID, -PIR_ID, -PIR_gene, -contains("_ES_"), - contains("_hmC_"), -contains("mC"),
-contains("Input"), -contains("ATAC"), -contains("CTCF"), -contains("H3K27me3"), -contains("RNA"))
magic_table_uncapped %>%
select(-contains("cluster_ID"), -contains("UMAP"), -P_ID, -PIR_ID, -PIR_gene, -contains("_ES_"), - contains("_hmC_"), -contains("mC"),
-contains("Input"), -contains("ATAC"), -contains("CTCF"), -contains("H3K27me3"), -contains("H3K27ac"), -contains("RNA"))
magic_table_uncapped %>%
select(-contains("cluster_ID"), -contains("UMAP"), -P_ID, -PIR_ID, -PIR_gene, -contains("_ES_"), - contains("_hmC_"), -contains("mC"),
-contains("Input"), -contains("ATAC"), -contains("CTCF"), -contains("H3K27me3"), -contains("H3K27ac"), -contains("RNA"), -contains("P_"))
magic_table_uncapped %>%
select(-contains("cluster_ID"), -contains("UMAP"), -P_ID, -PIR_ID, -PIR_gene, -contains("_ES_"), - contains("_hmC_"), -contains("mC"),
-contains("Input"), -contains("ATAC"), -contains("CTCF"), -contains("H3K27me3"), -contains("H3K27ac"), -contains("RNA"), -contains("P_"),
-contains("H3K4me3"), -cluster_group)
magic_table_uncapped %>%
select(-contains("cluster_ID"), -contains("UMAP"), -P_ID, -PIR_ID, -PIR_gene, -contains("_ES_"), - contains("_hmC_"), -contains("mC"),
-contains("Input"), -contains("ATAC"), -contains("CTCF"), -contains("H3K27me3"), -contains("H3K27ac"), -contains("RNA"), -contains("P_"),
-contains("H3K4me3"), -cluster_group) %>%
mutate(CHiC_diff_DNMT = CHiC_DNMT_KO_EpiLC_D2 - CHiC_DNMT_WT_EpiLC_D2)
magic_table_uncapped %>%
select(-contains("cluster_ID"), -contains("UMAP"), -P_ID, -PIR_ID, -PIR_gene, -contains("_ES_"), - contains("_hmC_"), -contains("mC"),
-contains("Input"), -contains("ATAC"), -contains("CTCF"), -contains("H3K27me3"), -contains("H3K27ac"), -contains("RNA"), -contains("P_"),
-contains("H3K4me3"), -cluster_group) %>%
mutate(CHiC_diff_DNMT = CHiC_DNMT_KO_EpiLC_D2 - CHiC_DNMT_WT_EpiLC_D2,
K4me1_diff_DNMT = PIR_H3K4me1_DNMT_KO_EpiLC_D2 - PIR_H3K4me1_DNMT_WT_EpiLC_D2,
CHiC_diff_TET = CHiC_TET_KO_EpiLC_D2 - CHiC_TET_WT_EpiLC_D2,
K4me1_diff_TET = PIR_H3K4me1_TET_KO_EpiLC_D2 - PIR_H3K4me1_TET_WT_EpiLC_D2) %>%
select(interaction_ID, EM_cluster_group, Louvain_cluster_group, contains("diff"))
magic_table_uncapped %>%
select(-contains("cluster_ID"), -contains("UMAP"), -P_ID, -PIR_ID, -PIR_gene, -contains("_ES_"), - contains("_hmC_"), -contains("mC"),
-contains("Input"), -contains("ATAC"), -contains("CTCF"), -contains("H3K27me3"), -contains("H3K27ac"), -contains("RNA"), -contains("P_"),
-contains("H3K4me3"), -cluster_group) %>%
mutate(CHiC_diff_DNMT = CHiC_DNMT_KO_EpiLC_D2 - CHiC_DNMT_WT_EpiLC_D2,
K4me1_diff_DNMT = PIR_H3K4me1_DNMT_KO_EpiLC_D2 - PIR_H3K4me1_DNMT_WT_EpiLC_D2,
CHiC_diff_TET = CHiC_TET_KO_EpiLC_D2 - CHiC_TET_WT_EpiLC_D2,
K4me1_diff_TET = PIR_H3K4me1_TET_KO_EpiLC_D2 - PIR_H3K4me1_TET_WT_EpiLC_D2) %>%
select(interaction_ID, EM_cluster_group, Louvain_cluster_group, contains("diff")) -> mark_differences
head(mark_differences)
genes_of_interest <- c("Tal1", "Nfe2", "Runx1", "Klf1", "Lyl1", "Gata1")
genes_of_interest <- c("Tal1", "Nfe2", "Runx1", "Klf1", "Lyl1", "Gata1")
mark_differences %>%
select(-Louvain_cluster_group) %>%
filter(P_gene %in% genes_of_interest)
magic_table_uncapped %>%
select(-contains("cluster_ID"), -contains("UMAP"), -P_ID, -PIR_ID, -PIR_gene, -contains("_ES_"), - contains("_hmC_"), -contains("mC"),
-contains("Input"), -contains("ATAC"), -contains("CTCF"), -contains("H3K27me3"), -contains("H3K27ac"), -contains("RNA"), -contains("P_"),
-contains("H3K4me3"), -cluster_group) %>%
mutate(CHiC_diff_DNMT = CHiC_DNMT_KO_EpiLC_D2 - CHiC_DNMT_WT_EpiLC_D2,
K4me1_diff_DNMT = PIR_H3K4me1_DNMT_KO_EpiLC_D2 - PIR_H3K4me1_DNMT_WT_EpiLC_D2,
CHiC_diff_TET = CHiC_TET_KO_EpiLC_D2 - CHiC_TET_WT_EpiLC_D2,
K4me1_diff_TET = PIR_H3K4me1_TET_KO_EpiLC_D2 - PIR_H3K4me1_TET_WT_EpiLC_D2) %>%
select(interaction_ID, EM_cluster_group, Louvain_cluster_group, P_gene, contains("diff")) -> mark_differences
magic_table_uncapped %>%
select(-contains("cluster_ID"), -contains("UMAP"), -P_ID, -PIR_ID, -PIR_gene, -contains("_ES_"), - contains("_hmC_"), -contains("mC"),
-contains("Input"), -contains("ATAC"), -contains("CTCF"), -contains("H3K27me3"), -contains("H3K27ac"), -contains("RNA"), -contains("P_"),
-contains("H3K4me3"), -cluster_group) %>%
mutate(CHiC_diff_DNMT = CHiC_DNMT_KO_EpiLC_D2 - CHiC_DNMT_WT_EpiLC_D2,
K4me1_diff_DNMT = PIR_H3K4me1_DNMT_KO_EpiLC_D2 - PIR_H3K4me1_DNMT_WT_EpiLC_D2,
CHiC_diff_TET = CHiC_TET_KO_EpiLC_D2 - CHiC_TET_WT_EpiLC_D2,
K4me1_diff_TET = PIR_H3K4me1_TET_KO_EpiLC_D2 - PIR_H3K4me1_TET_WT_EpiLC_D2)
magic_table_uncapped %>%
select(-contains("cluster_ID"), -contains("UMAP"), -P_ID, -PIR_ID, -PIR_gene, -contains("_ES_"), - contains("_hmC_"), -contains("mC"),
-contains("Input"), -contains("ATAC"), -contains("CTCF"), -contains("H3K27me3"), -contains("H3K27ac"), -contains("RNA"), -contains("P_"),
-contains("H3K4me3"), -cluster_group, P_gene) %>%
mutate(CHiC_diff_DNMT = CHiC_DNMT_KO_EpiLC_D2 - CHiC_DNMT_WT_EpiLC_D2,
K4me1_diff_DNMT = PIR_H3K4me1_DNMT_KO_EpiLC_D2 - PIR_H3K4me1_DNMT_WT_EpiLC_D2,
CHiC_diff_TET = CHiC_TET_KO_EpiLC_D2 - CHiC_TET_WT_EpiLC_D2,
K4me1_diff_TET = PIR_H3K4me1_TET_KO_EpiLC_D2 - PIR_H3K4me1_TET_WT_EpiLC_D2) %>%
select(interaction_ID, EM_cluster_group, Louvain_cluster_group, P_gene, contains("diff")) -> mark_differences
head(mark_differences)
mark_differences %>%
select(-Louvain_cluster_group) %>%
filter(P_gene %in% genes_of_interest)
mark_differences %>%
select(-Louvain_cluster_group) %>%
filter(P_gene %in% genes_of_interest) -> blood_PIR_differences_EM
head(blood_PIR_differences_EM)
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_point(position = position_jitter())
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_jitter(height = 0, width = 0.2)
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_jitter(height = 0, width = 0.2) +
theme(axis.text.x = element_text(angle = 45), axis.title.x = element_blank())
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_jitter(height = 0, width = 0.2) +
theme(axis.text.x = element_text(angle = 45, hjust = 0), axis.title.x = element_blank())
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_jitter(height = 0, width = 0.2) +
theme(axis.text.x = element_text(angle = 45, hjust = -1), axis.title.x = element_blank())
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_jitter(height = 0, width = 0.2) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.title.x = element_blank())
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_jitter(height = 0, width = 0.2) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12), axis.title.x = element_blank())
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_jitter(height = 0, width = 0.2) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12), axis.title.x = element_blank(), legend.title = element_blank())
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_jitter(height = 0, width = 0.2) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12), axis.title.x = element_blank(), legend.title = element_blank())
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_jitter(height = 0, width = 0.2) +
ylab("log2 fold difference H3K4me1 (TET TKO - WT)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12), axis.title.x = element_blank(),
axis.title.y = element_text(size = 12), legend.title = element_blank())
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_jitter(height = 0, width = 0.2) +
ylab("log2 fold difference H3K4me1\n (TET TKO - WT)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12), axis.title.x = element_blank(),
axis.title.y = element_text(size = 12), legend.title = element_blank())
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_jitter(height = 0, width = 0.2) +
ylab("log2 fold difference H3K4me1\n (TET TKO - WT)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12), axis.title.x = element_blank(),
axis.title.y = element_text(size = 12), legend.title = element_blank())
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_jitter(height = 0, width = 0.2) +
ylab("log2 fold difference H3K4me1\n (TET TKO - WT)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12), axis.title.x = element_blank(),
axis.title.y = element_text(size = 12), legend.title = element_blank())
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_jitter(height = 0, width = 0.2) +
ylab("log2 fold difference H3K4me1\n (TET TKO - WT)") +
geom_hline(yintercept = 0, linetype = "dotted") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12), axis.title.x = element_blank(),
axis.title.y = element_text(size = 12), legend.title = element_blank())
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_jitter(height = 0, width = 0.2) +
ylab("log2 fold difference H3K4me1\n (TET TKO - WT)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12), axis.title.x = element_blank(),
axis.title.y = element_text(size = 12), legend.title = element_blank())
blood_PIR_differences_EM %>%
ggplot(aes(EM_cluster_group, K4me1_diff_TET, colour = P_gene)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_jitter(height = 0, width = 0.1) +
ylab("log2 fold difference H3K4me1\n (TET TKO - WT)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 12), axis.title.x = element_blank(),
axis.title.y = element_text(size = 12), legend.title = element_blank())
